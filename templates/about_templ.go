// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func About() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = Header().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<body class=\"bg-slate-300\"><div class=\"flex items-center justify-center mx-4 flex-col\"><h1 class=\"text-3xl font-bold mt-12 text-center\">About</h1><h3 class=\"text-xl font-bold mt-8 text-center\">What is BibleSearch.ing?</h3><p class=\"mt-8 text-center\">BibleSearch.ing is a new search engine for the Holy Bible. It's great to find a verse you have in the back of your mind, but can't remember the exact words.</p><h3 class=\"text-xl font-bold mt-8 text-center\">What makes BibleSearch.ing different?</h3><p class=\"mt-8 text-center\">BibleSearch.ing uses what's called a \"vector search\" to find the most relevant verses to your query. A vector database is used to hold the meaning of a particular piece of data in a coordinate space, and the search query is converted into one of these vector. The query is then compared to the vectors in the database, and the closest neighboring verses in the coordinate space are returned. Because the coordinates of a verse are based off of the meaning of the words, this means the closest verses are the ones that are most similar in meaning.</p><h3 class=\"text-xl font-bold mt-8 text-center\">How was BibleSearch.ing made?</h3><p class=\"mt-8 text-center\">BibleSearch.ing was made using Chroma, one of these vector databases. We then vectorize all of the verses in the Bible, using OpenAI's text-embedding-ada-002 model and store them in the database. The search engine is written in Go, and the frontend is written TEMPL, Tailwind, and HTMX. The entire project is open source, and can be found on <a href=\"https://github.com/LukeTarr/BibleSearch\" class=\"text-blue-500 underline\">GitHub</a>.</p><p class=\"mt-8 text-center\">1 Corinthians 10:31</p></div></body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
